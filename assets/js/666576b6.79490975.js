"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7499],{8942:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var r=i(4848),o=i(8453);const t={sidebar_position:2},s="Configuration",a={id:"Getting Started/Configuration",title:"Configuration",description:"Application Properties",source:"@site/docs/1. Getting Started/4-Configuration.md",sourceDirName:"1. Getting Started",slug:"/Getting Started/Configuration",permalink:"/proven-ai/docs/Getting Started/Configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/ctrl-space-labs/proven-ai/tree/main/provenai-documentation/docs/1. Getting Started/4-Configuration.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/proven-ai/docs/Getting Started/Installation"},next:{title:"Environment Variables",permalink:"/proven-ai/docs/Getting Started/Environment-Variables"}},l={},c=[{value:"Application Properties",id:"application-properties",level:2},{value:"Server Configuration",id:"server-configuration",level:2},{value:"Logging Configuration",id:"logging-configuration",level:2},{value:"Spring MVC Configuration",id:"spring-mvc-configuration",level:2},{value:"JPA and Hibernate Configuration",id:"jpa-and-hibernate-configuration",level:2},{value:"DataSource Configuration",id:"datasource-configuration",level:2},{value:"Jackson Serialization Configuration",id:"jackson-serialization-configuration",level:2},{value:"Application Name",id:"application-name",level:2},{value:"Security Configuration (OAuth2 and JWT)",id:"security-configuration-oauth2-and-jwt",level:2},{value:"Keycloak Configuration",id:"keycloak-configuration",level:2},{value:"Management and Monitoring",id:"management-and-monitoring",level:2},{value:"SpringDoc-Swagger UI",id:"springdoc-swagger-ui",level:2},{value:"ProvenAI SSI Configuration",id:"provenai-ssi-configuration",level:2},{value:"OpenAPI Configuration",id:"openapi-configuration",level:2},{value:"Gendox Domain API Integration",id:"gendox-domain-api-integration",level:2},{value:"Proven-AI Frontend",id:"proven-ai-frontend",level:2},{value:"Blockchain Configuration",id:"blockchain-configuration",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.h2,{id:"application-properties",children:"Application Properties"}),"\n",(0,r.jsxs)(n.p,{children:["Customize the application settings in the ",(0,r.jsx)(n.code,{children:"src/main/resources/application.yml"})," file for the core configuration properties. Also you can set specific configuration settings based on the environment. Hence there are also the ",(0,r.jsx)(n.code,{children:"./application-local.yml"}),", ",(0,r.jsx)(n.code,{children:"./application-dev.yml"}),", ",(0,r.jsx)(n.code,{children:"./application-prod.yml"}),". Based on this structure all the configuration settings can be set to different values depending on the environment."]}),"\n",(0,r.jsx)(n.h2,{id:"server-configuration",children:"Server Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"server.port"}),": Specifies the port the application will run on. Default is set to ",(0,r.jsx)(n.code,{children:"8082"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"server.servlet.context-path"}),": Defines the base path for all API endpoints. Set to ",(0,r.jsx)(n.code,{children:"/proven-ai/api/v1"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"logging-configuration",children:"Logging Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"logging.level.dev.ctrlspace"}),": Sets the logging level for the ",(0,r.jsx)(n.code,{children:"dev.ctrlspace"})," package."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"logging.level.org.springframework"}),": Sets the logging level for Spring framework logs."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"spring-mvc-configuration",children:"Spring MVC Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spring.mvc.format.date-time"}),": Defines the format for date-time fields in the application. The format is set as ",(0,r.jsx)(n.code,{children:"yyyy-MM-dd'T'HH:mm:ss.SSSZ"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"jpa-and-hibernate-configuration",children:"JPA and Hibernate Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spring.jpa.show-sql"}),": If ",(0,r.jsx)(n.code,{children:"true"}),", enables SQL query logging. Set to ",(0,r.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spring.jpa.hibernate.ddl-auto"}),": Defines the schema generation strategy. Set to ",(0,r.jsx)(n.code,{children:"none"}),", which means no automatic schema generation."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"datasource-configuration",children:"DataSource Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spring.datasource.url"}),": The URL for the database. It is defined from an environment variable ",(0,r.jsx)(n.code,{children:"DATABASE_URL"}),". If the environment variable is not set, defaults to ",(0,r.jsx)(n.code,{children:"no-env-variable"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spring.datasource.username"}),": The database username, configurable via the ",(0,r.jsx)(n.code,{children:"DATABASE_USERNAME"})," environment variable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spring.datasource.password"}),": The database password, configurable via the ",(0,r.jsx)(n.code,{children:"DATABASE_PASSWORD"})," environment variable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spring.datasource.hikari.maximum-pool-size"}),": Configures the maximum number of connections in the HikariCP connection pool."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spring.datasource.hikari.minimum-idle"}),": Configures the minimum number of idle connections in the HikariCP connection pool."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"jackson-serialization-configuration",children:"Jackson Serialization Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spring.jackson.serialization.write-dates-as-timestamps"}),": Determines whether dates are written as timestamps in JSON responses. Set to ",(0,r.jsx)(n.code,{children:"false"}),", meaning dates will be serialized in ISO 8601 format."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"application-name",children:"Application Name"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spring.application.name"}),": The name of the application. Set to ",(0,r.jsx)(n.code,{children:"proven-ai-api"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"security-configuration-oauth2-and-jwt",children:"Security Configuration (OAuth2 and JWT)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spring.security.oauth2.resourceserver.jwt.issuer-uri"}),": Specifies the OAuth2 JWT issuer URI."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spring.security.oauth2.resourceserver.jwt.jwk-set-uri"}),": Specifies the URI for the JSON Web Key Set (JWKS) used to verify JWT tokens."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"keycloak-configuration",children:"Keycloak Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"keycloak.base-url"}),": The base URL of the Keycloak server."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"keycloak.token-uri"}),": The URI for obtaining access tokens from Keycloak."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"keycloak.realm"}),": The Keycloak realm used for authentication."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"keycloak.client-id"}),": The client ID for Keycloak, retrieved via the ",(0,r.jsx)(n.code,{children:"KEYCLOAK_CLIENT_ID"})," environment variable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"keycloak.client-secret"}),": The client secret (password) for Keycloak, retrieved via the ",(0,r.jsx)(n.code,{children:"KEYCLOAK_CLIENT_SECRET"})," environment variable."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"management-and-monitoring",children:"Management and Monitoring"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"management.tracing.sampling.probability"}),": Defines the probability for tracing sampling. Set to ",(0,r.jsx)(n.code,{children:"1.0"})," it enables full tracing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"management.metrics.distribution.percentiles-histogram.http.server.requests"}),": Enables percentile histograms for HTTP server requests."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"management.endpoints.web.exposure.include"}),": Specifies which management endpoints are exposed over the web. Set to ",(0,r.jsx)(n.code,{children:"*"})," to expose all endpoints."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"management.endpoint.health.show-details"}),": Shows application endpoints health information details. Set to ",(0,r.jsx)(n.code,{children:"always"})," to show full details."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"management.observations.key-values.application"}),": Sets an observation key-value for the application name, which is ",(0,r.jsx)(n.code,{children:"proven-ai-api"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"springdoc-swagger-ui",children:"SpringDoc-Swagger UI"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"springdoc.swagger-ui.path"}),": Defines the path for accessing the Swagger UI. Set to ",(0,r.jsx)(n.code,{children:"/api-documentation"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"provenai-ssi-configuration",children:"ProvenAI SSI Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.ssi.issuer-private-jwk"}),": Specifies the issuer's private JWK, configurable via the ",(0,r.jsx)(n.code,{children:"ISSUER_PRIVATE_JWK"})," environment variable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.ssi.issuer-did"}),": Specifies the issuer's DID (Decentralized Identifier), configurable via the ",(0,r.jsx)(n.code,{children:"ISSUER_DID"})," environment variable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.ssi.verifier.url"}),": The URL for the SSI verifier service."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.ssi.issuer.url"}),": The URL for the SSI issuer service."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"openapi-configuration",children:"OpenAPI Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.openapi.servers.local-url"}),": The local OpenAPI server URL, set to ",(0,r.jsx)(n.code,{children:"http://localhost:<port>"})," concatenated with the context path."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.openapi.servers.dev-url"}),": The development OpenAPI server URL, set to ",(0,r.jsx)(n.code,{children:"https://dev.proven-ai.ctrlspace.dev"})," concatenated with the context path."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.openapi.servers.prod-url"}),": The production OpenAPI server URL, set to ",(0,r.jsx)(n.code,{children:"https://app.proven-ai.ctrlspace.dev"})," concatenated with the context path."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"gendox-domain-api-integration",children:"Gendox Domain API Integration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.domains.gendox.base-url"}),": The base URL for Gendox API. It is defined in each ",(0,r.jsx)(n.code,{children:"application.properties.yml"})," file depending on the environment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.domains.gendox.context-path"}),": The context path for Gendox API, set to ",(0,r.jsx)(n.code,{children:"/gendox/api/v1"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.domains.gendox.apis.user-profile"}),": The endpoint for user profiles."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.domains.gendox.apis.semantic-search"}),": The endpoint for semantic search."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.domains.gendox.apis.completion"}),": The endpoint for semantic completion."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.domains.gendox.apis.web-hook"}),": The endpoint for webhooks related to ProvenAI events."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"proven-ai-frontend",children:"Proven-AI Frontend"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.domains.proven-ai-frontend.base-url"}),": The base URL for the Proven-AI frontend. It is defined in each ",(0,r.jsx)(n.code,{children:"application.properties.yml"})," file depending on the environment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.domains.proven-ai-frontend.context-path"}),": The context path for the frontend, set to the same as the server context path."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"blockchain-configuration",children:"Blockchain Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.blockchain.rpc-url"}),": Specifies the RPC URL for the blockchain, configurable via the ",(0,r.jsx)(n.code,{children:"BLOCKCHAIN_RPC_URL"})," environment variable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.blockchain.contract-address"}),": Specifies the contract address for the blockchain, configurable via the ",(0,r.jsx)(n.code,{children:"BLOCKCHAIN_CONTRACT_ADDRESS"})," environment variable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.blockchain.private-key"}),": Specifies the private key for interacting with the blockchain, configurable via the ",(0,r.jsx)(n.code,{children:"BLOCKCHAIN_PRIVATE_KEY"})," environment variable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"proven-ai.blockchain.chain-id"}),": Specifies the chain ID of the blockchain network, configurable via the ",(0,r.jsx)(n.code,{children:"BLOCKCHAIN_CHAIN_ID"})," environment variable. Default is ",(0,r.jsx)(n.code,{children:"0"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var r=i(6540);const o={},t=r.createContext(o);function s(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);