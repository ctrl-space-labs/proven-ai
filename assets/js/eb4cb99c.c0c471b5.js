"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7546],{9389:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=t(4848),o=t(8453);const r={},s="5.1 Introduction",c={id:"ISCC Code/5.1 Introduction",title:"5.1 Introduction",description:"ISCC is a universal identifier of all types of digital content. The ISCC can be generated for content but also for parts of chunks of it. For example a section of a document. The relation between the parent and child elements can be preserved in the ISCC identifier. Thus we can identify the work any chucks are taken from. The ISCC is a content code, that is created from the content file itself. Processing the content with the algorithms defined by ISCC specification creates a unique composite code, consisting of four major elements The ISCC can be created offline on any local device or app, that supports the suggested standard.  The ISCC is short enough to be written on any blockchain while preserving its unique features.",source:"@site/docs/5. ISCC Code/5.1 Introduction.md",sourceDirName:"5. ISCC Code",slug:"/ISCC Code/5.1 Introduction",permalink:"/proven-ai/docs/ISCC Code/5.1 Introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/ctrl-space-labs/proven-ai/tree/feature-13-proven-ai-smart-contracts/provenai-documentation/docs/5. ISCC Code/5.1 Introduction.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"4.1.Issuer",permalink:"/proven-ai/docs/SSI Issuer & Verifier/4.1.Issuer"},next:{title:"5.2 ISCC Code Generation",permalink:"/proven-ai/docs/ISCC Code/5.2 ISCC Code Generation"}},a={},d=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Steps",id:"steps",level:2},{value:"1. Cloning the ISCC-web Indentity Repository",id:"1-cloning-the-iscc-web-indentity-repository",level:3},{value:"2. Deployment",id:"2-deployment",level:3},{value:"Caddyfile",id:"caddyfile",level:4},{value:".env",id:"env",level:4},{value:"docker-compose.yaml",id:"docker-composeyaml",level:4},{value:"2. Setup Services",id:"2-setup-services",level:3},{value:"Port Mapping",id:"port-mapping",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"51-introduction",children:"5.1 Introduction"}),"\n",(0,i.jsx)(n.p,{children:"ISCC is a universal identifier of all types of digital content. The ISCC can be generated for content but also for parts of chunks of it. For example a section of a document. The relation between the parent and child elements can be preserved in the ISCC identifier. Thus we can identify the work any chucks are taken from. The ISCC is a content code, that is created from the content file itself. Processing the content with the algorithms defined by ISCC specification creates a unique composite code, consisting of four major elements The ISCC can be created offline on any local device or app, that supports the suggested standard.  The ISCC is short enough to be written on any blockchain while preserving its unique features."}),"\n",(0,i.jsx)(n.p,{children:"The minimal viable, first iteration ISCC will be a byte structure built from the following components:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Meta-Code: The meta-code is a similarity preserving hash from generic metadata like title and creators."}),"\n",(0,i.jsx)(n.li,{children:"Content-Code:  This code is a similarity preserving hash from the extracted content. It is independent of the file format and encoding."}),"\n",(0,i.jsx)(n.li,{children:"Data-Code: This similarity preserving hash is produced by chunks of the raw data. It groups  It groups complete encoded files with similar content and encoding."}),"\n",(0,i.jsx)(n.li,{children:"Instance-Code: The top hash of a Merkle tree generated from chunks of raw data of an encoded media blob. It identifies a concrete manifestation and proves the integrity of the full content."}),"\n"]}),"\n",(0,i.jsx)(n.h1,{id:"511-setup-iscc-code-web-service",children:"5.1.1 Setup ISCC Code Web Service"}),"\n",(0,i.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,i.jsx)(n.p,{children:"Install Docker on your machine."}),"\n",(0,i.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,i.jsx)(n.h3,{id:"1-cloning-the-iscc-web-indentity-repository",children:"1. Cloning the ISCC-web Indentity Repository"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"git clone https://github.com/iscc/iscc-web.git && cd iscc-web\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-deployment",children:"2. Deployment"}),"\n",(0,i.jsx)(n.p,{children:"Create the following files:"}),"\n",(0,i.jsx)(n.h4,{id:"caddyfile",children:"Caddyfile"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"{\n  email {$ISCC_WEB_SITE_EMAIL}\n}\n\n{$ISCC_WEB_SITE_ADDRESS} {\n  reverse_proxy app:8000\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"env",children:".env"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"ISCC_WEB_ENVIRONMENT=production\nISCC_WEB_SITE_EMAIL=admin@example.com\nISCC_WEB_SITE_ADDRESS=https://example.com\nISCC_WEB_PRIVATE_FILES=true\nISCC_WEB_MAX_UPLOAD_SIZE=1073741824\nISCC_WEB_STORAGE_EXPIRY=3600\nISCC_WEB_CLEANUP_INTERVAL=600\nISCC_WEB_LOG_LEVEL=INFO\nISCC_WEB_IO_READ_SIZE=2097152\nFORWARDED_ALLOW_IPS=*\n"})}),"\n",(0,i.jsx)(n.h4,{id:"docker-composeyaml",children:"docker-compose.yaml"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'version: "3.8"\n\nvolumes:\n  caddy-config:\n  caddy-data:\n\nservices:\n  app:\n    image: ghcr.io/iscc/iscc-web:main\n    init: true\n    env_file: .env\n  caddy:\n    image: caddy:2.6.1-alpine\n    restart: unless-stopped\n    env_file: .env\n    volumes:\n      - ./Caddyfile:/etc/caddy/Caddyfile\n      - caddy-config:/config\n      - caddy-data:/data\n    ports:\n      - "80:80"\n      - "443:443"\n      - "443:443/udp"\n    depends_on:\n      - app\n'})}),"\n",(0,i.jsx)(n.p,{children:"Make sure you have a DNS entry pointing to your servers IP and set the correct ISCC_WEB_SITE_ADDRESS in your .env file. You should also change ISCC_WEB_SITE_EMAIL."}),"\n",(0,i.jsx)(n.h3,{id:"2-setup-services",children:"2. Setup Services"}),"\n",(0,i.jsx)(n.p,{children:"With the iscc-web package we can now run all APIs with docker:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"cd docker-compose && docker-compose up\n"})}),"\n",(0,i.jsx)(n.h2,{id:"port-mapping",children:"Port Mapping"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["ISCC Web Services: ",(0,i.jsx)(n.a,{href:"http://localhost:8000/api/v1/",children:"http://localhost:8000/api/v1/"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);